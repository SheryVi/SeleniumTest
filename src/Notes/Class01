Selenium Class01

Для чего нужна автоматизация?
- для определения правильности и качества приложения

Как много способов автоматизации?

- ручное тестирование
- автоматизированное тестирование

Когда автоматизируем?

- после того как прошло ручное тестирования
- тестирование проходит в тестовой среде

Средства автоматизации:

- Selenium, TestNG, Cucumber, Katalon Studio, UFT/QTP

Уровни тестирования:

- Unit testing (for developers)
- Integration
- Acceptance testing (clients)
- System testing

Типы тестирования

- Функциональное тестирование
- Нефункциональное тестирование:
    - Performance testing
    - Security testing (как ведет себя система когда ее пытаются взломать)

Что такое Selenium?

Selenium - это набор инструментов которые помогают нам автоматизировать веб-приложения.
В основном используется для выполнения функционального тестирования.

Компоненты Selenium:

- Selenium IDE => Integrated Developing Environment
- Selenium Grid => FireFox Plugin
- Selenium WebDriver
- Selenium RC - Remote Control

Selenium WebDriver

- Open Source automation tool, позволяет нам выполнять действия с веб-приложениями
- WebDriver - это Interface

Преимущиства использования Selenium

- открытый код
- работает с разными броузерами и поддерживает cross browser testing
- работает с разными языками программирования Ruby, JavaScript, Java, Python.
- работает с разными операционными системами IOS, Windows, Linux

Недостатки использования Selenium

- cannot test desktop application
- нет технической поддержки
- нет построения отчетов
- мы не можем тестировать видео, изображения и капча

get() vs navigate()

- navigate() => может переключать страницу вперед, назад и обновлять ее
- get() => этот метод будет ждать полной загрузки страницы,а затем преейдет к следующей строке кода,
 а navigate() не будет ждать;
 - get() не хранить историю браузера
 - navigate() будет хранить историю браузера

close() vs quite()

close() - закроет текущую страницу
quite() - закроет браузер


